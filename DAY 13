--EX1
WITH twt_job_listings AS
(SELECT 
  company_id,
  title,
  description,
  COUNT(*) AS count_company
FROM job_listings
GROUP BY company_id, title, description)
SELECT 
  COUNT(count_company) AS duplicate_companies
FROM twt_job_listings
GROUP BY count_company
HAVING count_company = '2'
--EX2
WITH twt_appliance AS (SELECT 
  category,
  product,
  SUM(spend) AS total_spend
FROM product_spend
WHERE category='appliance'
AND DATE_PART('year',transaction_date) = '2022'
GROUP BY category, product
ORDER BY total_spend DESC 
LIMIT 2),
twt_electronics AS(SELECT 
  category,
  product,
  SUM(spend) AS total_spend
FROM product_spend
WHERE category='electronics'
AND DATE_PART('year',transaction_date) = '2022'
GROUP BY category, product
ORDER BY total_spend DESC 
LIMIT 2)
SELECT 
  category,
  product,
  total_spend
FROM twt_appliance
UNION ALL 
SELECT 
  category,
  product,
  total_spend
FROM twt_electronics
--EX3
WITH CTE AS 
(SELECT 
  policy_holder_id,
  COUNT(case_id) 
FROM callers
GROUP BY policy_holder_id
HAVING COUNT(case_id) >= '3')
SELECT 
  COUNT(*) AS policy_holder_count
FROM CTE
--EX4
SELECT 
  p.page_id
FROM pages AS p
LEFT JOIN page_likes AS l
ON p.page_id=l.page_id
WHERE liked_date IS NULL
ORDER BY page_id 
--EX5
WITH twt_6 AS (SELECT 
  user_id,
  EXTRACT(month FROM event_date) as month
FROM user_actions
WHERE EXTRACT(month FROM event_date)=6),
twt_7 AS (SELECT 
  user_id,
  EXTRACT(month FROM event_date) as month
FROM user_actions
WHERE EXTRACT(month FROM event_date)=7)
SELECT 
  month,
  COUNT( DISTINCT user_id) AS monthly_active_users
FROM twt_7
WHERE user_id IN (SELECT 
  user_id
FROM twt_6)
GROUP BY month
--EX6
SELECT 
    LEFT(trans_date, 7) AS month,
    country,
    COUNT(*) AS trans_count,
    SUM(CASE WHEN state='approved' THEN 1 ELSE 0 END) AS approved_count,
    SUM(amount) AS trans_total_amount,
    SUM(CASE WHEN state='approved' THEN amount ELSE 0 END) AS approved_total_amount
FROM Transactions
GROUP BY month, country
--EX7
WITH CTE AS (
SELECT 
    product_id,
    MIN(year) AS first_year
FROM Sales
GROUP BY product_id
)
SELECT DISTINCT
    a.product_id,
    b.first_year,
    a.quantity,
    a.price
FROM CTE AS b
LEFT JOIN Sales AS a ON a.product_id=b.product_id AND 
 a.year=b.first_year
--EX8
WITH CTE AS (
    SELECT 
        customer_id, 
        COUNT(DISTINCT product_key) AS distinct_product_count
    FROM Customer
    GROUP BY customer_id
)
SELECT 
    customer_id
FROM CTE
WHERE distinct_product_count = (SELECT COUNT(*) FROM Product);
--EX9
SELECT 
    employee_id 
FROM Employees
WHERE salary < 30000
AND manager_id NOT IN (SELECT employee_id FROM Employees)
ORDER BY employee_id
--EX10
WITH twt_job_listings AS
(SELECT 
  company_id,
  title,
  description,
  COUNT(*) AS count_company
FROM job_listings
GROUP BY company_id, title, description)
SELECT 
  COUNT(count_company) AS duplicate_companies
FROM twt_job_listings
GROUP BY count_company
HAVING count_company = '2'
--EX11
WITH twt_rating AS (
SELECT 
     r.movie_id,
    AVG(r.rating) AS avg_rating,
    m.title
FROM MovieRating AS r
INNER JOIN Movies AS m 
ON r.movie_id=m.movie_id
WHERE LEFT(created_at,7)='2020-02'
GROUP BY movie_id
ORDER BY avg_rating DESC,
     m.title ASC
LIMIT 1),
twt_name AS 
(SELECT 
    u.name,
    COUNT(m.user_id) 
FROM MovieRating AS m
LEFT JOIN Users AS u
ON u.user_id=m.user_id
GROUP BY m.user_id
ORDER BY COUNT(m.user_id) DESC, u.name ASC 
LIMIT 1)
(SELECT 
    name AS results
FROM twt_name)
UNION ALL
(SELECT 
    title
FROM twt_rating)
--EX12








